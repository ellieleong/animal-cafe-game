class FoodCircle {
  float x, y, r;
  color c;
  boolean beingDragged = false;

  FoodCircle(float x, float y, float r, color c) {
    this.x = x;
    this.y = y;
    this.r = r;
    this.c = c;
  }

  void update() {
    if (beingDragged) {
      x = mouseX;
      y = mouseY;
    }
  }

  void display() {
    fill(c);
    noStroke();
    ellipse(x, y, r * 2, r * 2);
  }

  boolean isMouseOver() {
    return dist(mouseX, mouseY, x, y) < r;
  }

  boolean isInCenter() {
    return dist(x, y, width / 2, height / 2) < 50;
  }
}


ArrayList<FoodCircle> circles = new ArrayList<FoodCircle>();
FoodCircle draggingCircle = null;


float displayX = 100, displayY = 350;
float displaySize = 220;
float circleRadius = 45;


PVector[] circleSpots;


color[] colors = {
  color(0, 100, 255),  // blue
  color(139, 69, 19),  // brown
  color(255, 0, 0),    // red
  color(255, 165, 0)   // orange
};

void setup() {
  size(1000, 800);
 
  float padding = circleRadius + 10; // ensures full fit inside square


  circleSpots = new PVector[] {
    new PVector(displayX + padding, displayY + padding),                                        
    new PVector(displayX + displaySize - padding, displayY + padding),                          
    new PVector(displayX + padding, displayY + displaySize - padding),                          
    new PVector(displayX + displaySize - padding, displayY + displaySize - padding)          
  };

  for (int i = 0; i < 4; i++) {
    circles.add(new FoodCircle(circleSpots[i].x, circleSpots[i].y, circleRadius, colors[i]));
  }
}
